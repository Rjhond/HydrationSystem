/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.finals;

import javax.swing.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import javax.swing.table.DefaultTableModel;

public class Dashboard extends javax.swing.JFrame {
    
    private final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);
    private final Connection conn;
    String ml, time;
    private final DefaultTableModel tableModel;
    int userId;
    
    
    public Dashboard() {
        
        initComponents();
        conn = Dbconnect.connectDbase();
        tableModel = (DefaultTableModel) tblprog.getModel();
        setLocationRelativeTo(null);
        scheduleResetAtMidnight();
        setResizable(false);
    }
    public void setUserId(int userId) {
        this.userId = userId;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblprog = new javax.swing.JTable();
        lbltoday = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        progbar = new javax.swing.JProgressBar();
        lblpercent = new javax.swing.JLabel();
        lblleft = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuProf = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuSummary = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        menuSet = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        tblprog.setBackground(new java.awt.Color(255, 255, 255));
        tblprog.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tblprog.setForeground(new java.awt.Color(0, 0, 0));
        tblprog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Drank", "Time"
            }
        ));
        tblprog.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblprogAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(tblprog);

        lbltoday.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lbltoday.setForeground(new java.awt.Color(0, 0, 0));
        lbltoday.setText("Today's Progress:");

        jButton9.setBackground(new java.awt.Color(51, 102, 255));
        jButton9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("+");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        progbar.setBackground(new java.awt.Color(255, 255, 255));
        progbar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        progbar.setForeground(new java.awt.Color(0, 51, 204));
        progbar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        progbar.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                progbarAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        lblpercent.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblpercent.setForeground(new java.awt.Color(0, 0, 0));
        lblpercent.setText("/");
        lblpercent.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblpercentAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        lblleft.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblleft.setForeground(new java.awt.Color(0, 0, 0));
        lblleft.setText("/");
        lblleft.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblleftAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblpercent, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lbltoday)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton9))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                        .addComponent(progbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblleft, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addComponent(lblpercent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progbar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(lblleft)
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbltoday)
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setForeground(new java.awt.Color(0, 0, 0));

        menuProf.setBackground(new java.awt.Color(255, 255, 255));
        menuProf.setForeground(new java.awt.Color(0, 0, 0));
        menuProf.setText("Profile");
        menuProf.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        menuProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuProfActionPerformed(evt);
            }
        });

        jMenuItem1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItem1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMenuItem1.setForeground(new java.awt.Color(0, 0, 0));
        jMenuItem1.setText("Profile");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuProf.add(jMenuItem1);

        jMenuBar1.add(menuProf);

        menuSummary.setText("Summary");
        menuSummary.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        menuSummary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSummaryActionPerformed(evt);
            }
        });

        jMenuItem3.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItem3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMenuItem3.setForeground(new java.awt.Color(0, 0, 0));
        jMenuItem3.setText("Summary");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        menuSummary.add(jMenuItem3);

        jMenuBar1.add(menuSummary);

        menuSet.setText("Settings");
        menuSet.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        menuSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSetActionPerformed(evt);
            }
        });

        jMenuItem4.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItem4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMenuItem4.setForeground(new java.awt.Color(0, 0, 0));
        jMenuItem4.setText("Settings");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        menuSet.add(jMenuItem4);

        jMenuBar1.add(menuSet);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        addRecord ad = new addRecord();
        ad.setUserId(userId);
        ad.setVisible(true);
        setVisible(false);
        ad.setLocationRelativeTo(null);
        setResizable(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void menuProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuProfActionPerformed

    }//GEN-LAST:event_menuProfActionPerformed

    private void menuSummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSummaryActionPerformed

    }//GEN-LAST:event_menuSummaryActionPerformed

    private void menuSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSetActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_menuSetActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        SummaryForm sf = new SummaryForm();
        sf.setUserId(userId);
        sf.setVisible(true);
        setVisible(false);
        sf.setLocation(null);     
        sf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        SettingForm stf = new SettingForm();
        stf.setUserId(userId);
        stf.setVisible(true);
        setVisible(false);
        stf.setLocation(null);
        stf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        ProfileForm pf = new ProfileForm();
        pf.setVisible(true);
        setVisible(false);
        pf.setLocation(null);     
        pf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void progbarAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_progbarAncestorAdded
        // TODO add your handling code here:
        try {
            double intakeGoal;
            try (PreparedStatement pstmt = conn.prepareStatement("SELECT intake_goal FROM water_intake_log WHERE usersid = ?")) {
                pstmt.setInt(1, userId);
                ResultSet rs = pstmt.executeQuery();
                if (rs.next()) {
                    intakeGoal = rs.getDouble("intake_goal");
                } else {
                    intakeGoal = 2180.0;
                }
            }
            double totalIntake;
            try (PreparedStatement pstmt = conn.prepareStatement("SELECT SUM(intake_ml) AS total_intake FROM water_intake_log WHERE usersid = ?")) {
                pstmt.setInt(1, userId);
                ResultSet rs = pstmt.executeQuery();
                totalIntake = rs.next() ? rs.getDouble("total_intake") : 0.0;
            }           
            int progressPercentage = (int) ((totalIntake / intakeGoal) * 100);
            progbar.setValue(progressPercentage);

            double remainingIntake = intakeGoal - totalIntake;
            lblpercent.setText(String.format("%.2f/%.0f (%d%%)", totalIntake, intakeGoal, progressPercentage));
            lblleft.setText(String.format("Remaining: %.2f ml", remainingIntake));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }//GEN-LAST:event_progbarAncestorAdded

    private void tblprogAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblprogAncestorAdded
        // TODO add your handling code here:
        tableModel.setRowCount(0);
        
        try {
            try (PreparedStatement pstmt = conn.prepareStatement("SELECT intake_ml, intake_time FROM water_intake_log WHERE usersid = ?")) {
                pstmt.setInt(1, userId);
                ResultSet rs = pstmt.executeQuery();
                while (rs.next()) {
                    ml = rs.getString("intake_ml");
                    time = rs.getString("intake_time");
                    tableModel.addRow(new Object[]{ml, time});
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,  ex.getMessage());
        }
    }//GEN-LAST:event_tblprogAncestorAdded

    private void lblpercentAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblpercentAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_lblpercentAncestorAdded

    private void lblleftAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblleftAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_lblleftAncestorAdded

    public void resetDailyData() {
        progbar.setValue(0); 
        lblpercent.setText(""); 
        lblleft.setText("");

        try (PreparedStatement pstmt = conn.prepareStatement("DELETE FROM water_intake_log WHERE DATE(intake_time) = CURDATE()")) {
            int rowsAffected = pstmt.executeUpdate();
            System.out.println(rowsAffected + " records deleted.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    private void scheduleResetAtMidnight() {
        Calendar now = Calendar.getInstance();
        long initialDelay = calculateMillisecondsUntilMidnight(now);
        scheduler.scheduleAtFixedRate(this::resetDailyData, initialDelay, 24 * 60 * 60 * 1000, TimeUnit.MILLISECONDS);
    }
    
    private long calculateMillisecondsUntilMidnight(Calendar now) {
        Calendar midnight = Calendar.getInstance();
        midnight.set(Calendar.HOUR_OF_DAY, 24);
        midnight.set(Calendar.MINUTE, 0);
        midnight.set(Calendar.SECOND, 0);
        midnight.set(Calendar.MILLISECOND, 0);
        
        long millisUntilMidnight = midnight.getTimeInMillis() - now.getTimeInMillis();
        if (millisUntilMidnight < 0) {
            millisUntilMidnight += 24 * 60 * 60 * 1000;
        }
        return millisUntilMidnight;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblleft;
    private javax.swing.JLabel lblpercent;
    private javax.swing.JLabel lbltoday;
    private javax.swing.JMenu menuProf;
    private javax.swing.JMenu menuSet;
    private javax.swing.JMenu menuSummary;
    private javax.swing.JProgressBar progbar;
    private javax.swing.JTable tblprog;
    // End of variables declaration//GEN-END:variables
}
