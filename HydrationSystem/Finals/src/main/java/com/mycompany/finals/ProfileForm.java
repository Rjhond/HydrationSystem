/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.finals;


import java.util.Date;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.Statement;


public class ProfileForm extends javax.swing.JFrame {

    private final Connection conn;
    String username, act, interest, bio, contact, email, address;
    int userId;
    Date birthday;
    
    public ProfileForm() {
        initComponents();
        conn = Dbconnect.connectDbase();
        setLocationRelativeTo(null);
        setResizable(false);
        
    }
    
     public void setUserId(int userId) {
        this.userId = userId;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        lbluname = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lbladdress = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        lblact = new javax.swing.JLabel();
        txtinter = new javax.swing.JTextField();
        lblinter = new javax.swing.JLabel();
        txtact = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtbio = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        lblcontact = new javax.swing.JLabel();
        txtcontact = new javax.swing.JTextField();
        lblemail = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        btnsave = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        dateBirth = new com.toedter.calendar.JDateChooser();
        txtuname = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Profile");

        lbluname.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lbluname.setForeground(new java.awt.Color(0, 0, 0));
        lbluname.setText("Username:");
        lbluname.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblunameAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel13.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Birthday:");

        lbladdress.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lbladdress.setForeground(new java.awt.Color(0, 0, 0));
        lbladdress.setText("Address:");
        lbladdress.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lbladdressAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        txtaddress.setBackground(new java.awt.Color(255, 255, 255));
        txtaddress.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtaddress.setForeground(new java.awt.Color(0, 0, 0));
        txtaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddressActionPerformed(evt);
            }
        });

        lblact.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblact.setForeground(new java.awt.Color(0, 0, 0));
        lblact.setText("Activities:");
        lblact.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblactAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        txtinter.setBackground(new java.awt.Color(255, 255, 255));
        txtinter.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtinter.setForeground(new java.awt.Color(0, 0, 0));

        lblinter.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblinter.setForeground(new java.awt.Color(0, 0, 0));
        lblinter.setText("Interests:");
        lblinter.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblinterAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        txtact.setBackground(new java.awt.Color(255, 255, 255));
        txtact.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtact.setForeground(new java.awt.Color(0, 0, 0));
        txtact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtactActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Bio:");

        txtbio.setBackground(new java.awt.Color(255, 255, 255));
        txtbio.setColumns(20);
        txtbio.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtbio.setRows(5);
        jScrollPane1.setViewportView(txtbio);

        jLabel18.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Contact Information");

        lblcontact.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lblcontact.setForeground(new java.awt.Color(0, 0, 0));
        lblcontact.setText("Contact Information:");
        lblcontact.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblcontactAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        txtcontact.setBackground(new java.awt.Color(255, 255, 255));
        txtcontact.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtcontact.setForeground(new java.awt.Color(0, 0, 0));

        lblemail.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblemail.setForeground(new java.awt.Color(0, 0, 0));
        lblemail.setText("Email:");
        lblemail.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblemailAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        txtemail.setBackground(new java.awt.Color(255, 255, 255));
        txtemail.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtemail.setForeground(new java.awt.Color(0, 0, 0));

        btnsave.setBackground(new java.awt.Color(51, 204, 0));
        btnsave.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnsave.setForeground(new java.awt.Color(0, 0, 0));
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnback.setBackground(new java.awt.Color(255, 51, 51));
        btnback.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnback.setForeground(new java.awt.Color(0, 0, 0));
        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        dateBirth.setBackground(new java.awt.Color(255, 255, 255));
        dateBirth.setForeground(new java.awt.Color(0, 0, 0));

        txtuname.setBackground(new java.awt.Color(255, 255, 255));
        txtuname.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtuname.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnback)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnsave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13)
                            .addComponent(lbluname)
                            .addComponent(lbladdress)
                            .addComponent(lblinter)
                            .addComponent(txtinter, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(lblact)
                            .addComponent(txtaddress)
                            .addComponent(txtact)
                            .addComponent(dateBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtuname))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblemail)
                            .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcontact, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblcontact)
                            .addComponent(jLabel18)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))))
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(286, 286, 286))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel11)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbluname))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(txtuname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbladdress)
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblact)
                    .addComponent(lblcontact))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcontact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblinter)
                    .addComponent(lblemail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtinter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsave)
                    .addComponent(btnback))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtactActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here: 
        username = txtuname.getText();
        act = txtact.getText();
        interest = txtinter.getText();
        bio = txtbio.getText();
        contact = txtcontact.getText();
        email = txtemail.getText();
        birthday = dateBirth.getDate();
        address = txtaddress.getText();

        try {
            try (PreparedStatement pstmt = conn.prepareStatement("SELECT u.bio, c.email, a.act, u.username, u.address " +
                "FROM users u " +
                "JOIN contacts c ON u.contact_id = c.id " +
                "JOIN activities a ON u.activity_id = a.id " +
                "WHERE u.usersid = ?")) {
                pstmt.setInt(1, userId);

                try (ResultSet rs = pstmt.executeQuery()) {
                    if (rs.next()) {
                        String existingEmail = rs.getString("email");
                        String existingAct = rs.getString("act");
                        String existingBio = rs.getString("bio");
                        String existingUsername = rs.getString("username");
                        String existingAddress = rs.getString("address");

                        if (!email.equals(existingEmail) || !act.equals(existingAct) || !username.equals(existingUsername) || !bio.equals(existingBio) || !address.equals(existingAddress)) {
                            try (PreparedStatement upstmt = conn.prepareStatement("UPDATE users SET bio=?, username=?, address=?, birthday=? WHERE usersid=?")) {
                                upstmt.setString(1, bio);
                                upstmt.setString(2, username);
                                upstmt.setString(3, address);
                                upstmt.setDate(4, new java.sql.Date(birthday.getTime()));
                                upstmt.setInt(5, userId);
                                upstmt.executeUpdate();
                            }

                            try (PreparedStatement upstmt = conn.prepareStatement("UPDATE contacts SET email=? WHERE id=(SELECT contact_id FROM users WHERE usersid=?)")) {
                                upstmt.setString(1, email);
                                upstmt.setInt(2, userId);
                                upstmt.executeUpdate();
                            }

                            try (PreparedStatement upstmt = conn.prepareStatement("UPDATE activities SET act=? WHERE id=(SELECT activity_id FROM users WHERE usersid=?)")) {
                                upstmt.setString(1, act);
                                upstmt.setInt(2, userId);
                                upstmt.executeUpdate();
                            }
                            JOptionPane.showMessageDialog(null, "Account Settings updated successfully!");
                        } else {
                            JOptionPane.showMessageDialog(null, "No changes detected.");
                        }
                    }
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        Dashboard db = new Dashboard();
        db.setVisible(true);
        setVisible(false);
        db.setLocation(null);     
        db.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_btnbackActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formComponentShown

    private void txtaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaddressActionPerformed

    private void lblunameAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblunameAncestorAdded
        // TODO add your handling code here:
        try (PreparedStatement pstmt = conn.prepareStatement("SELECT username FROM users WHERE usersid = ?")) {
            pstmt.setInt(1, userId);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                String UserName = rs.getString("username"); 
                lbluname.setText("Username: " + UserName);                   
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_lblunameAncestorAdded

    private void lbladdressAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lbladdressAncestorAdded
        // TODO add your handling code here:
        try (PreparedStatement pstmt = conn.prepareStatement("SELECT address FROM users WHERE usersid = ?")) {
            pstmt.setInt(1, userId);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                String addresss = rs.getString("address"); 
                lbluname.setText("Username: " + addresss);                   
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_lbladdressAncestorAdded

    private void lblactAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblactAncestorAdded
        // TODO add your handling code here:
        try (PreparedStatement pstmt = conn.prepareStatement("SELECT a.act FROM users u JOIN activities a ON u.activity_id = a.id WHERE u.usersid = ?")) {
            pstmt.setInt(1, userId);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                String act = rs.getString("act"); 
                lblact.setText("Activity: " + act);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_lblactAncestorAdded

    private void lblinterAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblinterAncestorAdded
        // TODO add your handling code here:
        try (PreparedStatement pstmt = conn.prepareStatement("SELECT interest FROM activities JOIN users ON activities.id = users.activity_id WHERE users.usersid = ?")) {
            pstmt.setInt(1, userId);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                String interest = rs.getString("interest");
                lblinter.setText("Interest: " + interest);
            }
        }catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_lblinterAncestorAdded

    private void lblcontactAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblcontactAncestorAdded
        // TODO add your handling code here:
        try (PreparedStatement pstmt = conn.prepareStatement("SELECT contact FROM contacts JOIN users ON contacts.id = users.contact_id WHERE users.usersid = ?")) {
            pstmt.setInt(1, userId);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                String contact = rs.getString("contact");
                lblcontact.setText("Contact: " + contact);
            }
        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_lblcontactAncestorAdded

    private void lblemailAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblemailAncestorAdded
        // TODO add your handling code here:
        try (PreparedStatement pstmt = conn.prepareStatement("SELECT email FROM contacts JOIN users ON contacts.id = users.contact_id WHERE users.usersid = ?")) {
            pstmt.setInt(1, userId);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                String email = rs.getString("email");
                lblemail.setText("Email: " + email);
            }
        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_lblemailAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProfileForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnsave;
    private com.toedter.calendar.JDateChooser dateBirth;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblact;
    private javax.swing.JLabel lbladdress;
    private javax.swing.JLabel lblcontact;
    private javax.swing.JLabel lblemail;
    private javax.swing.JLabel lblinter;
    private javax.swing.JLabel lbluname;
    private javax.swing.JTextField txtact;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextArea txtbio;
    private javax.swing.JTextField txtcontact;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtinter;
    private javax.swing.JTextField txtuname;
    // End of variables declaration//GEN-END:variables
}
